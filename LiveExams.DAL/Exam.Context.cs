//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LiveExams.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LiveExamEntities : DbContext
    {
        public LiveExamEntities()
            : base("name=LiveExamEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CandExamLog> CandExamLogs { get; set; }
        public virtual DbSet<Candidate> Candidates { get; set; }
        public virtual DbSet<College> Colleges { get; set; }
        public virtual DbSet<Position> Positions { get; set; }
        public virtual DbSet<PosQueJoin> PosQueJoins { get; set; }
        public virtual DbSet<Qualification> Qualifications { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<QuestionAnswer> QuestionAnswers { get; set; }
        public virtual DbSet<QuestionCategory> QuestionCategories { get; set; }
        public virtual DbSet<Technology> Technologies { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        [DbFunction("LiveExamEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string rowData, string splitOn)
        {
            var rowDataParameter = rowData != null ?
                new ObjectParameter("RowData", rowData) :
                new ObjectParameter("RowData", typeof(string));
    
            var splitOnParameter = splitOn != null ?
                new ObjectParameter("SplitOn", splitOn) :
                new ObjectParameter("SplitOn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[LiveExamEntities].[Split](@RowData, @SplitOn)", rowDataParameter, splitOnParameter);
        }
    
        public virtual ObjectResult<Cand_Login_Result> Cand_Login(string userName, string userPassword)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cand_Login_Result>("Cand_Login", userNameParameter, userPasswordParameter);
        }
    
        public virtual int Candidate_Insert(string name, Nullable<bool> gender, Nullable<System.DateTime> dob, Nullable<long> clgId, Nullable<long> qualId, string email, string mobile, Nullable<long> posId, Nullable<long> techId, string uname, string pass, Nullable<bool> isActive, ObjectParameter errorMsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var clgIdParameter = clgId.HasValue ?
                new ObjectParameter("clgId", clgId) :
                new ObjectParameter("clgId", typeof(long));
    
            var qualIdParameter = qualId.HasValue ?
                new ObjectParameter("QualId", qualId) :
                new ObjectParameter("QualId", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var posIdParameter = posId.HasValue ?
                new ObjectParameter("posId", posId) :
                new ObjectParameter("posId", typeof(long));
    
            var techIdParameter = techId.HasValue ?
                new ObjectParameter("techId", techId) :
                new ObjectParameter("techId", typeof(long));
    
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Candidate_Insert", nameParameter, genderParameter, dobParameter, clgIdParameter, qualIdParameter, emailParameter, mobileParameter, posIdParameter, techIdParameter, unameParameter, passParameter, isActiveParameter, errorMsg);
        }
    
        public virtual int Change_IsActive(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Change_IsActive", idParameter);
        }
    
        public virtual int Change_IsActive_College(Nullable<int> id, Nullable<bool> isActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Change_IsActive_College", idParameter, isActiveParameter);
        }
    
        public virtual int Change_IsActive_Result(Nullable<int> id, Nullable<bool> isActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Change_IsActive_Result", idParameter, isActiveParameter);
        }
    
        public virtual int College_Delete(Nullable<long> id, ObjectParameter errorMsg)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("College_Delete", idParameter, errorMsg);
        }
    
        public virtual int College_Insert(string clgName, string univ, Nullable<bool> isActive, ObjectParameter errorMsg)
        {
            var clgNameParameter = clgName != null ?
                new ObjectParameter("clgName", clgName) :
                new ObjectParameter("clgName", typeof(string));
    
            var univParameter = univ != null ?
                new ObjectParameter("univ", univ) :
                new ObjectParameter("univ", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("College_Insert", clgNameParameter, univParameter, isActiveParameter, errorMsg);
        }
    
        public virtual int College_Update(Nullable<long> id, string clgName, string univ, ObjectParameter errorMsg)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var clgNameParameter = clgName != null ?
                new ObjectParameter("clgName", clgName) :
                new ObjectParameter("clgName", typeof(string));
    
            var univParameter = univ != null ?
                new ObjectParameter("univ", univ) :
                new ObjectParameter("univ", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("College_Update", idParameter, clgNameParameter, univParameter, errorMsg);
        }
    
        public virtual ObjectResult<Export_Candidate_Result> Export_Candidate(Nullable<int> collegeID, string startDate, string endDate)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("collegeID", collegeID) :
                new ObjectParameter("collegeID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Export_Candidate_Result>("Export_Candidate", collegeIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Export_Candidate_New_Result> Export_Candidate_New(Nullable<int> collegeID, string startDate, string endDate)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("collegeID", collegeID) :
                new ObjectParameter("collegeID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Export_Candidate_New_Result>("Export_Candidate_New", collegeIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Get_AllCategory_Result> Get_AllCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_AllCategory_Result>("Get_AllCategory");
        }
    
        public virtual ObjectResult<Get_College_Result> Get_College()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_College_Result>("Get_College");
        }
    
        public virtual ObjectResult<Get_College_Tab_Result> Get_College_Tab()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_College_Tab_Result>("Get_College_Tab");
        }
    
        public virtual ObjectResult<Get_Position_Result> Get_Position()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Position_Result>("Get_Position");
        }
    
        public virtual ObjectResult<Get_Qualification_Result> Get_Qualification()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Qualification_Result>("Get_Qualification");
        }
    
        public virtual ObjectResult<Get_QueCategoryName_Result> Get_QueCategoryName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_QueCategoryName_Result>("Get_QueCategoryName");
        }
    
        public virtual ObjectResult<Get_QustionList_Result> Get_QustionList(Nullable<long> posID, Nullable<int> userID, string mode)
        {
            var posIDParameter = posID.HasValue ?
                new ObjectParameter("PosID", posID) :
                new ObjectParameter("PosID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var modeParameter = mode != null ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_QustionList_Result>("Get_QustionList", posIDParameter, userIDParameter, modeParameter);
        }
    
        public virtual ObjectResult<Get_SelectedCategory_Result> Get_SelectedCategory(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_SelectedCategory_Result>("Get_SelectedCategory", iDParameter);
        }
    
        public virtual ObjectResult<Get_Technology_Result> Get_Technology()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Technology_Result>("Get_Technology");
        }
    
        public virtual ObjectResult<Nullable<int>> Get_Time(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Get_Time", iDParameter);
        }
    
        public virtual ObjectResult<GetAdminQuestionList_Result> GetAdminQuestionList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdminQuestionList_Result>("GetAdminQuestionList");
        }
    
        public virtual ObjectResult<GetResult_Result> GetResult(string username, string qualiname, string techname, string clgname)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var qualinameParameter = qualiname != null ?
                new ObjectParameter("Qualiname", qualiname) :
                new ObjectParameter("Qualiname", typeof(string));
    
            var technameParameter = techname != null ?
                new ObjectParameter("Techname", techname) :
                new ObjectParameter("Techname", typeof(string));
    
            var clgnameParameter = clgname != null ?
                new ObjectParameter("Clgname", clgname) :
                new ObjectParameter("Clgname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetResult_Result>("GetResult", usernameParameter, qualinameParameter, technameParameter, clgnameParameter);
        }
    
        public virtual int Insert_ExamResult(Nullable<int> id, Nullable<decimal> percentage)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_ExamResult", idParameter, percentageParameter);
        }
    
        public virtual int Position_Delete(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Position_Delete", iDParameter);
        }
    
        public virtual int Position_Insert(string name, Nullable<int> time, ObjectParameter iD)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Position_Insert", nameParameter, timeParameter, iD);
        }
    
        public virtual int Position_Update(Nullable<long> iD, string name, Nullable<int> time)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Position_Update", iDParameter, nameParameter, timeParameter);
        }
    
        public virtual int PosQueJoin_Insert(Nullable<long> posID, Nullable<long> categoryID, Nullable<int> question)
        {
            var posIDParameter = posID.HasValue ?
                new ObjectParameter("PosID", posID) :
                new ObjectParameter("PosID", typeof(long));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            var questionParameter = question.HasValue ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PosQueJoin_Insert", posIDParameter, categoryIDParameter, questionParameter);
        }
    
        public virtual int PosQueJoin_Update(Nullable<long> posID, Nullable<long> categoryID, Nullable<int> question)
        {
            var posIDParameter = posID.HasValue ?
                new ObjectParameter("PosID", posID) :
                new ObjectParameter("PosID", typeof(long));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            var questionParameter = question.HasValue ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PosQueJoin_Update", posIDParameter, categoryIDParameter, questionParameter);
        }
    
        public virtual ObjectResult<Session_Login_Result> Session_Login(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Session_Login_Result>("Session_Login", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> SP_GetExamData(Nullable<long> candidateId, Nullable<long> positionId, ObjectParameter time, ObjectParameter noOfQuestion)
        {
            var candidateIdParameter = candidateId.HasValue ?
                new ObjectParameter("CandidateId", candidateId) :
                new ObjectParameter("CandidateId", typeof(long));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetExamData", candidateIdParameter, positionIdParameter, time, noOfQuestion);
        }
    
        public virtual ObjectResult<SP_GetStudentResult_Result> SP_GetStudentResult(Nullable<long> candidateID)
        {
            var candidateIDParameter = candidateID.HasValue ?
                new ObjectParameter("CandidateID", candidateID) :
                new ObjectParameter("CandidateID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetStudentResult_Result>("SP_GetStudentResult", candidateIDParameter);
        }
    
        public virtual int SP_RegisterCandidate(string name, string gender, Nullable<System.DateTime> dob, Nullable<long> clgId, Nullable<long> qualId, string email, string mobile, Nullable<long> posId, Nullable<long> techId, string uname, string pass, Nullable<bool> isActive, ObjectParameter errorMsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var clgIdParameter = clgId.HasValue ?
                new ObjectParameter("clgId", clgId) :
                new ObjectParameter("clgId", typeof(long));
    
            var qualIdParameter = qualId.HasValue ?
                new ObjectParameter("QualId", qualId) :
                new ObjectParameter("QualId", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var posIdParameter = posId.HasValue ?
                new ObjectParameter("posId", posId) :
                new ObjectParameter("posId", typeof(long));
    
            var techIdParameter = techId.HasValue ?
                new ObjectParameter("techId", techId) :
                new ObjectParameter("techId", typeof(long));
    
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RegisterCandidate", nameParameter, genderParameter, dobParameter, clgIdParameter, qualIdParameter, emailParameter, mobileParameter, posIdParameter, techIdParameter, unameParameter, passParameter, isActiveParameter, errorMsg);
        }
    
        public virtual int Technology_Delete(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Technology_Delete", iDParameter);
        }
    
        public virtual int Technology_Insert(string name, Nullable<bool> isActive)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Technology_Insert", nameParameter, isActiveParameter);
        }
    
        public virtual int Technology_Update(Nullable<long> iD, string name, Nullable<bool> isActive)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Technology_Update", iDParameter, nameParameter, isActiveParameter);
        }
    
        public virtual int TestAnswer_Delete(Nullable<long> answerID)
        {
            var answerIDParameter = answerID.HasValue ?
                new ObjectParameter("AnswerID", answerID) :
                new ObjectParameter("AnswerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TestAnswer_Delete", answerIDParameter);
        }
    
        public virtual int TestAnswer_Insert(Nullable<long> questionID, string answer, Nullable<bool> isRightAnswer, Nullable<int> answerOrder)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("QuestionID", questionID) :
                new ObjectParameter("QuestionID", typeof(long));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var isRightAnswerParameter = isRightAnswer.HasValue ?
                new ObjectParameter("IsRightAnswer", isRightAnswer) :
                new ObjectParameter("IsRightAnswer", typeof(bool));
    
            var answerOrderParameter = answerOrder.HasValue ?
                new ObjectParameter("AnswerOrder", answerOrder) :
                new ObjectParameter("AnswerOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TestAnswer_Insert", questionIDParameter, answerParameter, isRightAnswerParameter, answerOrderParameter);
        }
    
        public virtual ObjectResult<TestAnswer_Select_Result> TestAnswer_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TestAnswer_Select_Result>("TestAnswer_Select");
        }
    
        public virtual int TestAnswer_Update(Nullable<long> answerID, Nullable<long> questionID, string answer, Nullable<bool> isRightAnswer, Nullable<int> answerOrder)
        {
            var answerIDParameter = answerID.HasValue ?
                new ObjectParameter("AnswerID", answerID) :
                new ObjectParameter("AnswerID", typeof(long));
    
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("QuestionID", questionID) :
                new ObjectParameter("QuestionID", typeof(long));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var isRightAnswerParameter = isRightAnswer.HasValue ?
                new ObjectParameter("IsRightAnswer", isRightAnswer) :
                new ObjectParameter("IsRightAnswer", typeof(bool));
    
            var answerOrderParameter = answerOrder.HasValue ?
                new ObjectParameter("AnswerOrder", answerOrder) :
                new ObjectParameter("AnswerOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TestAnswer_Update", answerIDParameter, questionIDParameter, answerParameter, isRightAnswerParameter, answerOrderParameter);
        }
    
        public virtual ObjectResult<TestAnswerListByQuestion_Result> TestAnswerListByQuestion(Nullable<long> questionID)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("QuestionID", questionID) :
                new ObjectParameter("QuestionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TestAnswerListByQuestion_Result>("TestAnswerListByQuestion", questionIDParameter);
        }
    
        public virtual ObjectResult<TestCategory_DDL_Result> TestCategory_DDL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TestCategory_DDL_Result>("TestCategory_DDL");
        }
    
        public virtual int TestCategory_Delete(Nullable<long> categoryID, ObjectParameter errorMsg)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TestCategory_Delete", categoryIDParameter, errorMsg);
        }
    
        public virtual int TestCategory_Insert(string name, ObjectParameter errorMsg)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TestCategory_Insert", nameParameter, errorMsg);
        }
    
        public virtual ObjectResult<TestCategory_Select_Result> TestCategory_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TestCategory_Select_Result>("TestCategory_Select");
        }
    
        public virtual int TestCategory_Update(Nullable<long> categoryID, string name, ObjectParameter errorMsg)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TestCategory_Update", categoryIDParameter, nameParameter, errorMsg);
        }
    
        public virtual ObjectResult<TestCategoryLogin_DDL_Result> TestCategoryLogin_DDL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TestCategoryLogin_DDL_Result>("TestCategoryLogin_DDL");
        }
    
        public virtual int TestQuestion_Delete(Nullable<long> questionID)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("QuestionID", questionID) :
                new ObjectParameter("QuestionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TestQuestion_Delete", questionIDParameter);
        }
    
        public virtual int TestQuestion_Insert(Nullable<long> categoryID, string detail, string description, ObjectParameter questionID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TestQuestion_Insert", categoryIDParameter, detailParameter, descriptionParameter, questionID);
        }
    
        public virtual ObjectResult<TestQuestion_Select_Result> TestQuestion_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TestQuestion_Select_Result>("TestQuestion_Select");
        }
    
        public virtual ObjectResult<TestQuestion_SelectByCategory_Result> TestQuestion_SelectByCategory(Nullable<long> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TestQuestion_SelectByCategory_Result>("TestQuestion_SelectByCategory", categoryIDParameter);
        }
    
        public virtual int TestQuestion_Update(Nullable<long> questionID, Nullable<long> categoryID, string detail, string description)
        {
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("QuestionID", questionID) :
                new ObjectParameter("QuestionID", typeof(long));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TestQuestion_Update", questionIDParameter, categoryIDParameter, detailParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<TestQuestionListByCategory_Result> TestQuestionListByCategory(Nullable<long> i_CategoryID)
        {
            var i_CategoryIDParameter = i_CategoryID.HasValue ?
                new ObjectParameter("i_CategoryID", i_CategoryID) :
                new ObjectParameter("i_CategoryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TestQuestionListByCategory_Result>("TestQuestionListByCategory", i_CategoryIDParameter);
        }
    
        public virtual ObjectResult<User_Login_Result> User_Login(string userName, string userPassword)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User_Login_Result>("User_Login", userNameParameter, userPasswordParameter);
        }
    }
}
